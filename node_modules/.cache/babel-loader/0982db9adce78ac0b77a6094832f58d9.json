{"ast":null,"code":"var _jsxFileName = \"/Users/rachitbartwal/Desktop/coding/MUSIC-SHARE/backend/frontend/src/components/recommend.js\",\n    _s = $RefreshSig$();\n\nimport { getRecommend } from \"../services/music_services\";\nimport { useEffect } from \"react\";\nimport { changeRecommends } from \"../reducers/musicReducers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommend = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const recommends = useSelector(state => state.recommended);\n  useEffect(() => {\n    getRecommend().then(res => {\n      console.log(`Response: ${JSON.stringify(res)}`);\n      console.log(`${res[2].track.ids}`);\n      dispatch(changeRecommends(res));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendContainer\",\n    children: recommends.songs ? console.log(`Empty`) : console.log(`Not empty ${recommends.songs}`)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recommend, \"OdALGSwoFC2mYufiPMkfxfEWJNc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Recommend;\nexport default Recommend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommend\");","map":{"version":3,"sources":["/Users/rachitbartwal/Desktop/coding/MUSIC-SHARE/backend/frontend/src/components/recommend.js"],"names":["getRecommend","useEffect","changeRecommends","useDispatch","useSelector","Recommend","dispatch","recommends","state","recommended","then","res","console","log","JSON","stringify","track","ids","songs"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,4BAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,UAAU,GAAGH,WAAW,CAACI,KAAK,IAAEA,KAAK,CAACC,WAAd,CAA9B;AACAR,EAAAA,SAAS,CAAC,MAAI;AACVD,IAAAA,YAAY,GACPU,IADL,CACWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAoB,EAA7C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,GAAG,CAAC,CAAD,CAAH,CAAOK,KAAP,CAAaC,GAAI,EAAhC;AACAX,MAAAA,QAAQ,CAACJ,gBAAgB,CAACS,GAAD,CAAjB,CAAR;AACH,KALL;AAMH,GAPQ,EAOP,EAPO,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,cACKJ,UAAU,CAACW,KAAX,GACKN,OAAO,CAACC,GAAR,CAAa,OAAb,CADL,GAEKD,OAAO,CAACC,GAAR,CAAa,aAAYN,UAAU,CAACW,KAAM,EAA1C;AAHV;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAlBD;;GAAMb,S;UACeF,W,EACEC,W;;;KAFjBC,S;AAmBN,eAAeA,SAAf","sourcesContent":["import { getRecommend } from \"../services/music_services\"\nimport { useEffect } from \"react\"\nimport { changeRecommends } from \"../reducers/musicReducers\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst Recommend = () => {\n    const dispatch = useDispatch()\n    const recommends = useSelector(state=>state.recommended)\n    useEffect(()=>{\n        getRecommend()\n            .then( res => {\n                console.log(`Response: ${JSON.stringify(res)}`)\n                console.log(`${res[2].track.ids}`)\n                dispatch(changeRecommends(res))\n            })\n    },[])\n    return(\n        <div className=\"recommendContainer\">\n            {recommends.songs\n                ? console.log(`Empty`)\n                : console.log(`Not empty ${recommends.songs}`)}\n        </div>\n    )\n}\nexport default Recommend"]},"metadata":{},"sourceType":"module"}