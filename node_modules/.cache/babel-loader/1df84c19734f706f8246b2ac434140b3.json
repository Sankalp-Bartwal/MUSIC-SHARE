{"ast":null,"code":"const defaultProfileState = {\n  first_name: null,\n  last_name: null,\n  username: null,\n  email: null,\n  password: null,\n  refresh_token: null,\n  spotify_profile: null,\n  image: null,\n  token: null\n};\nconst defaultGenreSongs = {\n  genre: null,\n  tracks: []\n};\nconst defaultRecommend = {\n  recommend: []\n};\n\nconst recommendReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultRecommend;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"create\":\n      return action.recommend;\n\n    default:\n      return state;\n  }\n};\n\nconst changeRecommends = recommend => {\n  return {\n    type: \"create\",\n    recommend\n  };\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProfileState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"create\":\n      return action.profile;\n\n    default:\n      return state;\n  }\n};\n\nconst newProfileAction = profile => {\n  return {\n    type: \"create\",\n    profile\n  };\n};\n\nconst exploreReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGenreSongs;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"changeGenre\":\n      return action.genre;\n\n    default:\n      return state;\n  }\n};\n\nconst changeGenre = genre => {\n  return {\n    type: \"changeGenre\",\n    genre\n  };\n}; // const loginReducer = (state=defaultLoginState, action) => {\n//     switch (action.type) {\n//         default:\n//             return state\n//     }\n// }\n\n\nexport { recommendReducer, changeRecommends, newProfileAction, profileReducer, exploreReducer, changeGenre };","map":{"version":3,"sources":["/Users/rachitbartwal/Desktop/coding/MUSIC-SHARE/backend/frontend/src/reducers/musicReducers.js"],"names":["defaultProfileState","first_name","last_name","username","email","password","refresh_token","spotify_profile","image","token","defaultGenreSongs","genre","tracks","defaultRecommend","recommend","recommendReducer","state","action","type","changeRecommends","profileReducer","profile","newProfileAction","exploreReducer","changeGenre"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG;AACxBC,EAAAA,UAAU,EAAE,IADY;AAExBC,EAAAA,SAAS,EAAE,IAFa;AAGxBC,EAAAA,QAAQ,EAAE,IAHc;AAIxBC,EAAAA,KAAK,EAAE,IAJiB;AAKxBC,EAAAA,QAAQ,EAAE,IALc;AAMxBC,EAAAA,aAAa,EAAE,IANS;AAOxBC,EAAAA,eAAe,EAAE,IAPO;AAQxBC,EAAAA,KAAK,EAAE,IARiB;AASxBC,EAAAA,KAAK,EAAE;AATiB,CAA5B;AAWA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,IADe;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAA1B;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,SAAS,EAAE;AADU,CAAzB;;AAIA,MAAMC,gBAAgB,GAAG,YAAoC;AAAA,MAAnCC,KAAmC,uEAA7BH,gBAA6B;AAAA,MAAXI,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAOD,MAAM,CAACH,SAAd;;AACJ;AACI,aAAOE,KAAP;AAJR;AAMH,CAPD;;AAQA,MAAMG,gBAAgB,GAAIL,SAAD,IAAe;AACpC,SAAO;AACHI,IAAAA,IAAI,EAAE,QADH;AAEHJ,IAAAA;AAFG,GAAP;AAIH,CALD;;AAMA,MAAMM,cAAc,GAAG,YAAuC;AAAA,MAAtCJ,KAAsC,uEAAhChB,mBAAgC;AAAA,MAAXiB,MAAW;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAOD,MAAM,CAACI,OAAd;;AACJ;AACI,aAAOL,KAAP;AAJR;AAMH,CAPD;;AAQA,MAAMM,gBAAgB,GAAGD,OAAO,IAAI;AAChC,SAAO;AACHH,IAAAA,IAAI,EAAE,QADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALD;;AAMA,MAAME,cAAc,GAAG,YAAqC;AAAA,MAApCP,KAAoC,uEAA9BN,iBAA8B;AAAA,MAAXO,MAAW;;AACxD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,aAAOD,MAAM,CAACN,KAAd;;AACJ;AACI,aAAOK,KAAP;AAJR;AAMH,CAPD;;AAQA,MAAMQ,WAAW,GAAGb,KAAK,IAAI;AACzB,SAAO;AACHO,IAAAA,IAAI,EAAE,aADH;AAEHP,IAAAA;AAFG,GAAP;AAIH,CALD,C,CAMA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASI,gBAAT,EAA2BI,gBAA3B,EAA6CG,gBAA7C,EAA+DF,cAA/D,EAA+EG,cAA/E,EAA+FC,WAA/F","sourcesContent":["const defaultProfileState = {\n    first_name: null,\n    last_name: null,\n    username: null,\n    email: null,\n    password: null,\n    refresh_token: null,\n    spotify_profile: null,\n    image: null,\n    token: null\n}\nconst defaultGenreSongs = {\n    genre: null,\n    tracks: [],\n}\nconst defaultRecommend = {\n    recommend: []\n}\n\nconst recommendReducer = (state=defaultRecommend, action) => {\n    switch (action.type) {\n        case \"create\":\n            return action.recommend\n        default:\n            return state    \n    }\n}\nconst changeRecommends = (recommend) => {\n    return({\n        type: \"create\",\n        recommend\n    })\n}\nconst profileReducer = (state=defaultProfileState, action) => {\n    switch (action.type) {\n        case \"create\":\n            return action.profile\n        default:\n            return state\n    }\n}\nconst newProfileAction = profile => {\n    return({\n        type: \"create\",\n        profile\n    })\n}\nconst exploreReducer = (state=defaultGenreSongs, action) => {\n    switch(action.type){\n        case \"changeGenre\":\n            return action.genre\n        default:\n            return state\n    }\n}\nconst changeGenre = genre => {\n    return({\n        type: \"changeGenre\",\n        genre\n    })\n}\n// const loginReducer = (state=defaultLoginState, action) => {\n//     switch (action.type) {\n//         default:\n//             return state\n//     }\n// }\n\nexport { recommendReducer, changeRecommends, newProfileAction, profileReducer, exploreReducer, changeGenre }"]},"metadata":{},"sourceType":"module"}